(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["module-line-item~module-store-locator~page-address~page-cart~page-checkout~page-product"],{

/***/ "./cartridges/app_accelerator_core/cartridge/client/default/js/checkout/summaryHelpers.js":
/*!************************************************************************************************!*\
  !*** ./cartridges/app_accelerator_core/cartridge/client/default/js/checkout/summaryHelpers.js ***!
  \************************************************************************************************/
/*! exports provided: populateAddressSummary, updateTotals, updateShippingSummaryPLI, updateMultiShippingOrderSummary, updateShippingSummaryItem, updateShippingSummaryList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"populateAddressSummary\", function() { return populateAddressSummary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateTotals\", function() { return updateTotals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateShippingSummaryPLI\", function() { return updateShippingSummaryPLI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateMultiShippingOrderSummary\", function() { return updateMultiShippingOrderSummary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateShippingSummaryItem\", function() { return updateShippingSummaryItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateShippingSummaryList\", function() { return updateShippingSummaryList; });\n/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/utilities */ \"./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/utilities.js\");\n/* harmony import */ var _borngroup_born_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @borngroup/born-utilities */ \"./node_modules/@borngroup/born-utilities/dist/born-utilities.min.js\");\n/* harmony import */ var _borngroup_born_utilities__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_borngroup_born_utilities__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _helpers_addressUtilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/addressUtilities */ \"./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/addressUtilities.js\");\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n\n/**\n * Copies the existing \"address summary template\" from the DOM and returns it.\n * A `context` argument may be passed to provide more customizations.\n */\n\nfunction _getSummaryTemplate(context, attributeUpdate, show) {\n  var summaryTemplate = document.querySelector('[data-address-summary=\"address-summary-template\"]').cloneNode(true);\n  context ? summaryTemplate.classList.add(\"address-summary--\".concat(context)) : '';\n  attributeUpdate ? summaryTemplate.setAttribute('data-address-summary', attributeUpdate) : '';\n  show ? summaryTemplate.classList.remove('hidden') : '';\n  return summaryTemplate;\n}\n/**\n * Updates the `addressData` with the custom first/last name values if they're enabled and available.\n * @param {[type]} addressData [description]\n */\n\n\nfunction _setCustomNames(addressData) {\n  if (addressData.useCustomNames) {\n    addressData.firstName = addressData.customFirstName || addressData.firstName;\n    addressData.lastName = addressData.customLastName || addressData.lastName;\n  }\n}\n/**\n * Populate the Billing Address Summary View\n * @param {string} addressContainer - the top level DOM element for a unique address summary\n * @param {Object} address - the address data\n */\n\n\nfunction populateAddressSummary(addressContainer, addressData) {\n  addressContainer = typeof addressContainer === 'string' ? document.querySelector(addressContainer) : addressContainer;\n\n  if (addressContainer) {\n    _setCustomNames(addressData);\n\n    for (var key in addressData) {\n      var matchedSummaryEl = addressContainer.querySelector(\"[data-address-summary=\\\"\".concat(key, \"\\\"]\"));\n\n      if (matchedSummaryEl) {\n        var hasDisplayValue = addressData[key] && addressData[key].hasOwnProperty('displayValue'),\n            displayValue = addressData[key] ? hasDisplayValue ? addressData[key].displayValue : addressData[key] : null; //Only display address data properties that are string or numbers.\n        //Only use boolean values to toggle visibility.\n\n        if (typeof displayValue === 'string' || typeof displayValue === 'number') {\n          matchedSummaryEl.textContent = displayValue;\n        } //Make sure address properties and sections that have values are shown.\n\n\n        if (displayValue) {\n          matchedSummaryEl.classList.remove('hidden');\n        } else {\n          //Hide properties and sections who match and have falsey values.\n          //Example sections: gift message, shipping methods.\n          matchedSummaryEl.classList.add('hidden');\n        }\n      }\n    } // Insert delivery ETA\n\n\n    var deliveryEta = addressContainer.querySelector('[data-checkout-component=\"shipping-method-eta\"]'),\n        deliveryEtaDate = addressContainer.querySelector('[data-checkout-component=\"shipping-method-eta-date\"]');\n\n    if (deliveryEta && deliveryEtaDate && addressData.shippingMethodETA) {\n      deliveryEtaDate.textContent = addressData.shippingMethodETA;\n      deliveryEta.classList.remove('hidden');\n    }\n  }\n}\n/**\n * updates the totals summary\n * @param {Array} totals - the totals data\n */\n\nfunction updateTotals(totals, shipping) {\n  var _loop = function _loop(key) {\n    Object(_borngroup_born_utilities__WEBPACK_IMPORTED_MODULE_1__[\"callbackOnElements\"])(\"[data-totals-component=\\\"\".concat(key, \"\\\"]\"), function (matchedTotalEl) {\n      var matchedValueEl = matchedTotalEl.querySelector('[data-totals-component=\"value\"]');\n\n      if (key === 'totalShippingCost') {\n        var matchedLabelEl = matchedTotalEl.querySelector('[data-totals-component=\"label\"]');\n        matchedLabelEl.textContent = shipping[0].selectedShippingMethod.displayName;\n      }\n\n      if (matchedValueEl && typeof totals[key] === 'string') {\n        matchedValueEl.textContent = totals[key];\n      } else if (matchedValueEl && totals[key] && _typeof(totals[key]) === 'object') {\n        if (totals[key].value) {\n          matchedValueEl.textContent = totals[key].formatted;\n          matchedTotalEl.classList.remove('hidden');\n        } else {\n          matchedTotalEl.classList.add('hidden');\n        }\n      }\n    });\n  };\n\n  for (var key in totals) {\n    _loop(key);\n  }\n}\n/**\n * Update the read-only portion of the shipment display (per PLI)\n * @param {Object} productLineItem - the productLineItem model\n * @param {Object} shipping - the shipping (shipment model) model\n * @param {Object} order - the order model\n * @param {Object} [options] - options for updating PLI summary info\n * @param {Object} [options.keepOpen] - if true, prevent changing PLI view mode to 'view'\n */\n\nfunction updateShippingSummaryPLI(productLineItem, shipping, order, options) {\n  var pliUUIDEl = document.querySelector(\"input[value=\\\"\".concat(productLineItem.UUID, \"\\\"]\")),\n      form = pliUUIDEl ? pliUUIDEl.form : false;\n\n  if (form && order.usingMultiShipping && shipping.shippingAddress) {\n    var summaryContainer = form.querySelector('[data-address-summary*=\"main\"]');\n    updateShippingSummaryItem(shipping, summaryContainer);\n    summaryContainer.classList.remove('hidden');\n    summaryContainer.classList.add('address-summary--multi-ship-summary');\n    summaryContainer.setAttribute('data-address-summary', \"main-\".concat(shipping.UUID));\n  }\n\n  $('body').trigger('shipping:updateShippingSummaryPLI', {\n    productLineItem: productLineItem,\n    shipping: shipping,\n    order: order,\n    options: options\n  });\n}\n/**\n * Updates the order product shipping summary for an order model\n * @param {Object} order - the order model\n */\n\nfunction updateMultiShippingOrderSummary(order) {\n  var productList = document.querySelector('[data-checkout-component=\"product-list\"]');\n\n  if (order.usingMultiShipping) {\n    var summaryListFragment = document.createDocumentFragment();\n    order.shipping.forEach(function (shipping) {\n      var shippingSummary = _getSummaryTemplate('line-item', \"main-\".concat(shipping.UUID), true); //Move the existing items in the DOM to their corresponding position in the current shipment.\n\n\n      shipping.productLineItems.items.forEach(function (productLineItem) {\n        var itemSummary = productList.querySelector(\"[data-cart-line-item=\\\"\".concat(productLineItem.UUID, \"\\\"]\"));\n        summaryListFragment.appendChild(itemSummary);\n      });\n      updateShippingSummaryItem(shipping, shippingSummary);\n      summaryListFragment.appendChild(shippingSummary);\n    }); //Clear the product summary container before any further DOM insertions.\n\n    productList.textContent = '';\n    productList.appendChild(summaryListFragment);\n  } else {\n    var shippingSummaryList = productList.querySelectorAll('[data-address-summary*=\"main\"]');\n    [].forEach.call(shippingSummaryList, function (currentSummary) {\n      return currentSummary.parentNode.removeChild(currentSummary);\n    });\n  }\n}\n/**\n * Updates the target `summaryContainer` HTML with the data provided in `shipping`.\n * @return {[type]}                  [description]\n */\n\nfunction updateShippingSummaryItem(shipping, summaryContainer) {\n  var shipMethod = shipping.selectedShippingMethod,\n      emailData = {\n    email: null\n  },\n      shipMethodData = {\n    shippingMethod: !!shipMethod,\n    //Force set to boolean, shipping method section is hidden by `populateAddressSummary` if false.\n    shippingMethodDisplayName: shipMethod.displayName,\n    shippingMethodArrivalTime: shipMethod.estimatedArrivalTime ? \"( \".concat(shipMethod.estimatedArrivalTime, \" )\") : '',\n    shippingMethodCost: shipMethod.shippingCost,\n    shippingMethodETA: shipMethod.etaFluent ? shipMethod.etaFluent : ''\n  },\n      giftData = {\n    gift: shipping.isGift,\n    giftMessage: shipping.giftMessage\n  },\n      salutationData = Object(_helpers_addressUtilities__WEBPACK_IMPORTED_MODULE_2__[\"getSalutationData\"])(shipping.shippingAddress),\n      addressData = Object(_helpers_utilities__WEBPACK_IMPORTED_MODULE_0__[\"objectAssign\"])({}, shipping.shippingAddress, shipMethodData, giftData, emailData, salutationData);\n  populateAddressSummary(summaryContainer, addressData);\n}\n/**\n * updates the order shipping summary for an order shipment model\n * @param {Object} shipping - the shipping (shipment model) model\n * @param {Object} order - the order model\n */\n\nfunction updateShippingSummaryList(shipping, order) {\n  Object(_borngroup_born_utilities__WEBPACK_IMPORTED_MODULE_1__[\"callbackOnElements\"])(\"[data-address-summary=\\\"main-\".concat(shipping.UUID, \"\\\"]\"), updateShippingSummaryItem.bind(this, shipping));\n  $('body').trigger('shipping:updateShippingSummaryList', {\n    shipping: shipping,\n    order: order\n  });\n}\n\n//# sourceURL=webpack:///./cartridges/app_accelerator_core/cartridge/client/default/js/checkout/summaryHelpers.js?");

/***/ }),

/***/ "./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/addressUtilities.js":
/*!*************************************************************************************************!*\
  !*** ./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/addressUtilities.js ***!
  \*************************************************************************************************/
/*! exports provided: populateAddressFields, getAddressFieldsMap, getAddressFieldsFromUI, getSalutationData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"populateAddressFields\", function() { return populateAddressFields; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAddressFieldsMap\", function() { return getAddressFieldsMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAddressFieldsFromUI\", function() { return getAddressFieldsFromUI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSalutationData\", function() { return getSalutationData; });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities */ \"./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/utilities.js\");\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n/**\n * Returns true if the element's type is either radio or checkbox.\n */\n\nfunction _isCheckable(inputField) {\n  return _isCheckbox(inputField) || _isRadio(inputField);\n}\n\nfunction _isCheckbox(inputField) {\n  return inputField.type === 'checkbox';\n}\n\nfunction _isRadio(inputField) {\n  return inputField.type === 'radio';\n}\n/**\n * Populates the input/select/textarea element values for a specified `formEl`, using the provided `addressObject`.\n * Pass the `clearFields` argument to reset the field values.\n */\n\n\nfunction populateAddressFields(formEl) {\n  var addressObject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var clearFields = arguments.length > 2 ? arguments[2] : undefined;\n  var addressFieldsMap = getAddressFieldsMap(formEl);\n\n  var _loop = function _loop(key) {\n    if (addressFieldsMap[key]) {\n      //Some field values might be an object with a `value` property. Use that property if available.\n      var newValue = addressObject[key] && _typeof(addressObject[key]) === 'object' ? addressObject[key].value : addressObject[key];\n\n      if (addressFieldsMap[key].fields && addressFieldsMap[key].fields.length) {\n        [].forEach.call(addressFieldsMap[key].fields, function (currentField) {\n          if (addressFieldsMap[key].matchingAttribute && currentField[addressFieldsMap[key].matchingAttribute] === newValue) {\n            _setNewValue(key, currentField, newValue);\n          }\n        });\n      } else {\n        _setNewValue(key, addressFieldsMap[key], newValue);\n      }\n    }\n  };\n\n  for (var key in addressFieldsMap) {\n    _loop(key);\n  }\n\n  function _setNewValue(key, currentField, newValue) {\n    if (addressObject.hasOwnProperty(key) || clearFields) {\n      if (_isCheckable(currentField)) {\n        currentField.checked = newValue;\n      } else {\n        currentField.value = newValue || '';\n      } //Fire an \"external change\" event that can be hooked into from other places.\n      //This prevents firing the OOTB \"change\" event, since parts of the application might be listening to those.\n\n\n      Object(_utilities__WEBPACK_IMPORTED_MODULE_0__[\"publishEvent\"])('external', 'change', currentField);\n    }\n  }\n}\n/**\n * Returns an object containing key:<value> pairs of matching elements withing the provided `formEl`,\n * where <value> equals to the matching HTMLElement.\n */\n\nfunction getAddressFieldsMap(formEl) {\n  return {\n    salutation: {\n      matchingAttribute: 'value',\n      fields: formEl.querySelectorAll('input[name$=_salutation]')\n    },\n    honoraryTitle: formEl.querySelector('input[name$=_honoraryTitle]'),\n    firstName: formEl.querySelector('input[name$=_firstName]'),\n    lastName: formEl.querySelector('input[name$=_lastName]'),\n    customFirstName: formEl.querySelector('input[name$=_customnames_firstname]'),\n    customLastName: formEl.querySelector('input[name$=_customnames_lastname]'),\n    address1: formEl.querySelector('input[name$=_address1]'),\n    address2: formEl.querySelector('input[name$=_address2]'),\n    city: formEl.querySelector('select[name$=_cityCode], input[name$=_cityCode]'),\n    postalCode: formEl.querySelector('input[name$=_postalCode]:not([disabled])'),\n    stateCode: formEl.querySelector('select[name$=_stateCode]:not([disabled]), input[name$=_stateCode]:not([disabled])'),\n    countryCode: formEl.querySelector('select[name$=_countryCode], select[name$=_country]'),\n    phone: formEl.querySelector('input[name$=_phone]'),\n    isGift: formEl.querySelector('input[name$=_isGift]'),\n    giftMessage: formEl.querySelector('textarea[name$=_giftMessage]'),\n    usingVerifiedAddress: formEl.querySelector('input[name$=_usingVerifiedAddress]'),\n    email: formEl.querySelector('input[name$=_email]')\n  };\n}\n/**\n * Returns an object containing key:<value> pairs of matching elements withing the provided `formEl`,\n * where <value> equals the actual value or state (in the case of a \"checkable\" element) of the matching element.\n * Leverages `getAddressFieldsMap` to gather the map data.\n */\n\nfunction getAddressFieldsFromUI(formEl) {\n  var addressFieldsMap = getAddressFieldsMap(formEl),\n      addressValuesMap = {};\n\n  var _loop2 = function _loop2(key) {\n    if (addressFieldsMap[key]) {\n      if (addressFieldsMap[key].fields && addressFieldsMap[key].fields.length) {\n        [].forEach.call(addressFieldsMap[key].fields, function (currentField) {\n          if (_isRadio(currentField) && currentField.checked) {\n            addressValuesMap[key] = currentField[addressFieldsMap[key].matchingAttribute];\n          }\n        });\n      } else {\n        addressValuesMap[key] = _isCheckable(addressFieldsMap[key]) ? addressFieldsMap[key].checked : addressFieldsMap[key].value;\n      }\n    }\n  };\n\n  for (var key in addressFieldsMap) {\n    _loop2(key);\n  }\n\n  return addressValuesMap;\n}\n/**\n * Returns an object with the user's Salutation value and displayValue.\n * Ideally, this should come from the backend directly, but it was set as String in the BM System Object, so here we are.\n */\n\nfunction getSalutationData(formDefinition) {\n  return formDefinition ? {\n    salutation: {\n      value: formDefinition.salutation,\n      displayValue: window.SFRA.Resources.salutations[formDefinition.salutation]\n    }\n  } : {};\n}\n\n//# sourceURL=webpack:///./cartridges/app_accelerator_core/cartridge/client/default/js/helpers/addressUtilities.js?");

/***/ })

}]);